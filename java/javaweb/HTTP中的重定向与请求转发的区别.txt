1.调用方式
    servlet中：
    request.getRequestDispatcher("new.jsp").forward(request, response);//转发到new.jsp
    response.sendRedirect("new.jsp");//重定向到new.jsp

    jsp页面中：
    <jsp:forward page="apage.jsp"/>//请求转发
    <%response.sendRedirect("new.jsp"); %>//重定向

2.本质区别
    解释一：
        转发是服务器行为，重定向是客户端行为。
        转发过程：客户端浏览器发送http请求 --> web服务器接收此请求 --> 调用内部的一个方法在容器内完成请求处理和转发动作 --> 将目标资源发送给客户
        注意：
            转发路径必须是同一个web容器下的url，传递内容为自己容器内的request。
            客户浏览器路径栏仍然显示第一次访问的路径，也就是说客户感觉不到服务器做了转发，转发行为是浏览器只做了一次访问请求。
        
        重定向过程：客户浏览器发送http请求 --> web服务器接收后发送302状态码响应及对新的location给客户浏览器 --> 客户浏览器发现是302响应，则自动再发送一个新的http请求，请求url是新的location地址 --> 服务器根据此请求寻找资源并发送给客户。
        注意：
            location可以重定向到任意url
            由于是浏览器重新发出请求，就没有request传递的概念了
            客户端浏览器路径栏显示的是重定向的路径，客户可以观察到地址的变化
            重定向行为是浏览器做了至少两次的访问请求
    
    解释二：
        重定向：其实是两次request(请求);第一次客户端请求A，服务器响应，告诉浏览器你应该去B，第二次请求B，这时候地址栏会发生变化；重定向可以访问自己web应用之外的资源。在重定向过程中，传输的信息会被丢失。
        请求转发：是服务器内部把对一个request/response的处理权，移交给另一个，对于客户端而言它只知道自己最早请求的A，而不知道中间的B，甚至C和D。传输的信息不会丢失。
    
    解释三：
        假设你去办理某个执照
        重定向：你先去了A局，A局的人说“这个事情不归我们管，去B局”，然后你就从A退出来，自己乘车去了B局。
        转发：你先去了A局，A局看了以后知道这个事情应该由B局管，但是他没有把你退回来，而是让你坐一会儿，自己到后面办公室联系了B局，让他们处理好好送了过来。

